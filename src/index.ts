import * as TelegramBot from "node-telegram-bot-api";
import * as dotenv from "dotenv";
import { Log } from "@uk/log";
import { ReplyKeyboardMarkup } from "node-telegram-bot-api";

dotenv.config();
const log  = new Log("INDEX");

//TODO —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è, —á—Ç–æ —Ç–∞–∫–æ–µ polling
// Create a bot that uses 'polling' to fetch new updates
const bot = new TelegramBot(process.env.TG_BOT_KEY, {polling: true});

bot.onText(/\/start/, (msg) => {
  bot.sendMessage(msg.chat.id, "–ó–¥–æ—Ä–æ–≤–µ–Ω—å–∫–∏ –±—É–ª–∏!", {
    reply_markup: {
      keyboard: [[{text: "–ü–µ—Ä—à–∞ –∫–Ω–æ–ø–∫–∞ üëÜ"}, {text: "–î—Ä—É–≥–∞ –∫–Ω–æ–ø–∫–∞ ‚úåÔ∏è"}],
      [{text: "–î–æ–æ–æ–æ–æ–≤–≥–∞ –∫–Ω–æ–ø–∫–∞ üòÜ"}],
      [{text: "–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é ‚Ü©Ô∏è"}]]
    } as ReplyKeyboardMarkup
  })
});

// Answer on command example - send photo to user
// bot.onText(/\/sendpic/, (msg) => {
//   bot.sendPhoto(msg.chat.id,
//     "https://ok-vmeste.ru/upload//video/images/small/c9/7b/c97bba99e0b5926c6b67b14a3864a999.jpg",
//     {caption: "–õ–æ–≤–∏ –∫–æ—Ç–∞!"});
// })

// Answer on sticker
// bot.on("sticker", (msg) => {
//   const answer = "Super sticker you have!";
//   log.debug(answer, msg);
//   const chatId = msg.chat.id;
//   bot.sendMessage(chatId, answer);
// })

bot.on('message', (msg) => {
  log.debug("On message answer: ", msg);
  
  const chatId = msg.chat.id;
  const botGreeting = "Hello, dear ";
  const botBye = "Bye-bye!";
  
  const checkGreeting = "hi";
  const checkBye = "bye";

  if (msg.text.toLowerCase().indexOf(checkGreeting) === 0) {
    bot.sendMessage(msg.chat.id, botGreeting + msg.from.first_name + "!");
  }
  
  if (msg.text.toLowerCase().includes(checkBye)) {
    bot.sendMessage(msg.chat.id, botBye);
  }
  
  
  // bot.sendMessage(chatId, '–ù–µ –ø–æ–Ω–∏–º–∞—é —Ç–≤–æ—é –∫–æ–º–∞–Ω–¥—É ;-(');
  
});
